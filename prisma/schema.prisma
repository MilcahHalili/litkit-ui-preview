// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  published Boolean  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String?   @db.VarChar(255)
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
  prompt    Prompt    @relation(fields: [promptId], references: [id])
  promptId  Int
}

model Prompt {
  id         Int      @id @default(autoincrement())
  workshop   Workshop @relation(fields: [workshopId], references: [id])
  workshopId Int
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  title      String?
  content    String?
  posts      Post[]
  published  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  name         String
  image        String?
  isInstructor Boolean?
  posts        Post[]
  comments     Comment[]
  workshops    Workshop[]
  Prompt       Prompt[]
}

model Workshop {
  id      Int      @id @default(autoincrement())
  name    String
  users   User[]
  prompts Prompt[]
}
